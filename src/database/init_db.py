from sqlalchemy.orm import Session
from src.database.connection import engine, Base
from src.models import User, Category, Transaction
from sqlalchemy import inspect
from src.models.category import CategoryType

def create_tables():
    """Create all database tables"""
    # Ensure all model modules are imported so SQLAlchemy registers them on Base
    from src.models.user import User  # noqa: F401
    from src.models.category import Category  # noqa: F401
    from src.models.transaction import Transaction  # noqa: F401
    from src.models.exchange_rates import ExchangeRate  # noqa: F401
    inspector = inspect(engine)
    existing = set(inspector.get_table_names(schema='public'))
    # Create tables one by one if missing
    # Create in dependency-safe order: categories -> users -> transactions -> exchange_rates
    tables = [Category.__table__, User.__table__, Transaction.__table__, ExchangeRate.__table__]
    for table in tables:
        if table.name not in existing:
            try:
                print(f"Creating table: {table.name}...")
                table.create(bind=engine, checkfirst=False)
                print(f"  ‚úì Created {table.name}")
            except Exception as e:
                print(f"  ‚ö† Failed creating {table.name}: {e}")

def create_default_categories(db: Session, user_id: int):
    """Create default categories for a new user"""
    default_categories = [
        # Income categories
        {"name_en": "Salary", "name_ru": "–ó–∞—Ä–ø–ª–∞—Ç–∞", "description_en": "Monthly salary", "description_ru": "–ï–∂–µ–º–µ—Å—è—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞", "category_type": CategoryType.INCOME, "color": "#27ae60", "icon": "üí∞", "is_default": True},
        {"name_en": "Freelance", "name_ru": "–§—Ä–∏–ª–∞–Ω—Å", "description_en": "Freelance work", "description_ru": "–§—Ä–∏–ª–∞–Ω—Å —Ä–∞–±–æ—Ç–∞", "category_type": CategoryType.INCOME, "color": "#2ecc71", "icon": "üíº", "is_default": True},
        {"name_en": "Investment", "name_ru": "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "description_en": "Investment returns", "description_ru": "–î–æ—Ö–æ–¥—ã –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π", "category_type": CategoryType.INCOME, "color": "#16a085", "icon": "üìà", "is_default": True},
        {"name_en": "Other Income", "name_ru": "–ü—Ä–æ—á–∏–µ –¥–æ—Ö–æ–¥—ã", "description_en": "Other income sources", "description_ru": "–î—Ä—É–≥–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–æ—Ö–æ–¥–∞", "category_type": CategoryType.INCOME, "color": "#1abc9c", "icon": "üíµ", "is_default": True},
        
        # Expense categories
        {"name_en": "Food & Dining", "name_ru": "–ï–¥–∞ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã", "description_en": "Restaurants, groceries", "description_ru": "–†–µ—Å—Ç–æ—Ä–∞–Ω—ã, –ø—Ä–æ–¥—É–∫—Ç—ã", "category_type": CategoryType.EXPENSE, "color": "#e74c3c", "icon": "üçΩÔ∏è", "is_default": True},
        {"name_en": "Transportation", "name_ru": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "description_en": "Gas, public transport", "description_ru": "–ë–µ–Ω–∑–∏–Ω, –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "category_type": CategoryType.EXPENSE, "color": "#f39c12", "icon": "üöó", "is_default": True},
        {"name_en": "Shopping", "name_ru": "–ü–æ–∫—É–ø–∫–∏", "description_en": "Clothes, electronics", "description_ru": "–û–¥–µ–∂–¥–∞, —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "category_type": CategoryType.EXPENSE, "color": "#e67e22", "icon": "üõçÔ∏è", "is_default": True},
        {"name_en": "Entertainment", "name_ru": "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "description_en": "Movies, games, hobbies", "description_ru": "–§–∏–ª—å–º—ã, –∏–≥—Ä—ã, —Ö–æ–±–±–∏", "category_type": CategoryType.EXPENSE, "color": "#9b59b6", "icon": "üé¨", "is_default": True},
        {"name_en": "Bills & Utilities", "name_ru": "–°—á–µ—Ç–∞ –∏ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏", "description_en": "Electricity, water, internet", "description_ru": "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ, –≤–æ–¥–∞, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç", "category_type": CategoryType.EXPENSE, "color": "#34495e", "icon": "‚ö°", "is_default": True},
        {"name_en": "Healthcare", "name_ru": "–ó–¥–æ—Ä–æ–≤—å–µ", "description_en": "Medical expenses", "description_ru": "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã", "category_type": CategoryType.EXPENSE, "color": "#e91e63", "icon": "üè•", "is_default": True},
        {"name_en": "Education", "name_ru": "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "description_en": "Courses, books", "description_ru": "–ö—É—Ä—Å—ã, –∫–Ω–∏–≥–∏", "category_type": CategoryType.EXPENSE, "color": "#3498db", "icon": "üìö", "is_default": True},
        {"name_en": "Other Expenses", "name_ru": "–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã", "description_en": "Miscellaneous expenses", "description_ru": "–†–∞–∑–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã", "category_type": CategoryType.EXPENSE, "color": "#95a5a6", "icon": "üìù", "is_default": True},
    ]
    
    for cat_data in default_categories:
        category = Category(user_id=user_id, **cat_data)
        db.add(category)
    
    db.commit()

def init_database():
    """Initialize database with tables and default data"""
    create_tables()
    print("Database tables created successfully!")

if __name__ == "__main__":
    init_database()
